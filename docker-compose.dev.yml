version: "3.8"

services:
  # Backend Service (NestJS)
  backend:
    build:
      context: ./project-name
      dockerfile: Dockerfile.dev
    container_name: fullstack_backend_dev
    ports:
      - "3001:3000"
    volumes:
      - ./project-name:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
    networks:
      - fullstack-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Frontend Service (React/Vite)
  frontend:
    build:
      context: ./vite-project
      dockerfile: Dockerfile.dev
    container_name: fullstack_frontend_dev
    ports:
      - "5173:5173"
    volumes:
      - ./vite-project:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost/api
    networks:
      - fullstack-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fullstack_nginx_dev
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - fullstack-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fullstack_postgres_dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=fullstack_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fullstack-network
    restart: unless-stopped

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: fullstack_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - fullstack-network
    restart: unless-stopped

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  fullstack-network:
    driver: bridge
